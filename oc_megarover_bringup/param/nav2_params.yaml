amcl:
  ros__parameters:
    use_sim_time: True
    # モーションモデルパラメータ（人混みでより慎重に）
    alpha1: 0.1  # 0.2から減少（回転による並進誤差を小さく）
    alpha2: 0.1  # 0.2から減少（並進による並進誤差を小さく）
    alpha3: 0.1  # 0.2から減少（並進による回転誤差を小さく）
    alpha4: 0.1  # 0.2から減少（回転による回転誤差を小さく）
    alpha5: 0.1  # 0.2から減少
    
    # パーティクル数の最適化
    max_particles: 2000  # 4000から減少（計算負荷軽減）
    min_particles: 500   # 1000から減少
    
    # レーザー設定の調整
    laser_max_range: 10.0    # 100.0から大幅減少（人混みでは短距離が有効）
    laser_min_range: 0.1     # -1.0から変更
    max_beams: 30           # 60から減少（計算負荷軽減）
    
    # 更新頻度の向上
    update_min_d: 0.1       # 0.25から減少（より頻繁に更新）
    update_min_a: 0.1       # 0.2から減少（より頻繁に更新）
    resample_interval: 2    # 1から増加（リサンプリング頻度を下げる）
    
    # パーティクルフィルタの調整
    pf_err: 0.01           # 0.05から減少（より高精度）
    pf_z: 0.95             # 0.99から減少
    
    # リカバリー機能の有効化
    recovery_alpha_fast: 0.1  # 0.0から変更（高速リカバリー有効）
    recovery_alpha_slow: 0.001 # 0.0から変更（低速リカバリー有効）
    
    # センサーモデルの調整
    z_hit: 0.7    # 0.3から増加（正確な測定を重視）
    z_rand: 0.2   # 0.7から減少（ランダムノイズを減少）
    z_max: 0.05   # 変更なし
    z_short: 0.05 # 変更なし
    
    # その他重要なパラメータ
    transform_tolerance: 0.5  # 1.0から減少（より厳密）
    laser_likelihood_max_dist: 1.0  # 2.0から減少
    sigma_hit: 0.2  # 0.3から減少（観測ノイズを小さく）
    
    base_frame_id: "base_footprint"
    global_frame_id: "map"
    odom_frame_id: "odom"
    scan_topic: scan
    save_pose_rate: 2.0  # 0.5から増加（保存頻度向上）
    tf_broadcast: true
    do_beamskip: true    # falseから変更（動的環境に対応）
    beam_skip_distance: 0.3    # 0.5から減少
    beam_skip_error_threshold: 0.7  # 0.9から減少
    beam_skip_threshold: 0.2   # 0.3から減少
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    laser_model_type: "likelihood_field"

  
bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 30.0  # 20.0から増加（より応答性向上）
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.5      # 0.3から増加（人混みでより寛容に）
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3  # 0.5から減少
      movement_time_allowance: 15.0  # 10.0から増加

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.3     # 0.25から少し緩和
      yaw_goal_tolerance: 0.3    # 0.25から少し緩和

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.5             # 1.0から減少（人混みでは低速）
      max_vel_y: 0.0
      max_vel_theta: 0.8         # 1.0から減少
      min_speed_xy: 0.0
      max_speed_xy: 0.5          # 1.0から減少
      min_speed_theta: 0.0
      acc_lim_x: 1.5             # 2.5から減少（緩やかな加速）
      acc_lim_y: 0.0
      acc_lim_theta: 2.0         # 3.2から減少
      decel_lim_x: -1.5          # -2.5から緩和
      decel_lim_y: 0.0
      decel_lim_theta: -2.0      # -3.2から緩和
      vx_samples: 15             # 20から減少（計算負荷軽減）
      vy_samples: 5
      vtheta_samples: 15         # 20から減少
      sim_time: 2.0              # 1.7から増加（より先を予測）
      linear_granularity: 0.03   # 0.05から細かく
      angular_granularity: 0.02  # 0.025から細かく
      transform_tolerance: 0.1   # 0.2から厳密に
      xy_goal_tolerance: 0.3     # 0.25から緩和
      trans_stopped_velocity: 0.15  # 0.25から減少
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.05   # 0.02から増加（障害物回避を重視）
      PathAlign.scale: 25.0      # 32.0から減少
      PathAlign.forward_point_distance: 0.2  # 0.1から増加
      GoalAlign.scale: 20.0      # 24.0から減少
      GoalAlign.forward_point_distance: 0.2  # 0.1から増加
      PathDist.scale: 25.0       # 32.0から減少
      GoalDist.scale: 20.0       # 24.0から減少
      RotateToGoal.scale: 25.0   # 32.0から減少
      RotateToGoal.slowing_factor: 3.0  # 5.0から減少
      RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0  # 5.0から増加（より頻繁な更新）
      publish_frequency: 5.0  # 2.0から増加
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: True
      rolling_window: true
      width: 4      # 3から増加（より広い範囲）
      height: 4     # 3から増加
      resolution: 0.03  # 0.05から細かく（高解像度）
      robot_radius: 0.25  # 0.22から少し大きく（安全マージン）
      plugins: ["voxel_layer", "inflation_layer"]
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0  # 3.0から増加（人を避けやすく）
        inflation_radius: 0.8     # 0.55から増加（より大きな安全領域）
        
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.5   # 3.0から増加
          raytrace_min_range: 0.0
          obstacle_max_range: 3.0   # 2.5から増加
          obstacle_min_range: 0.0
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 2.0  # 1.0から増加
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: True
      robot_radius: 0.25     # 0.22から増加
      resolution: 0.03       # 0.05から細かく
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 5.0   # 3.0から増加
          raytrace_min_range: 0.0
          obstacle_max_range: 4.0   # 2.5から増加
          obstacle_min_range: 0.0
          
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 4.0   # 3.0から増加
        inflation_radius: 0.7      # 0.55から増加
      always_send_full_costmap: True

  
map_server:
  ros__parameters:
    use_sim_time: True
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: "/home/tk/map.yaml"

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.6, 0.0, 1.0]
    min_velocity: [-0.6, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
